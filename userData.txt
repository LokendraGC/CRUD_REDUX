import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";

export const getAllData = createAsyncThunk(
  "gitUser",
  async (args, { rejectWithValue }) => {
    try {
      const response = await fetch("https://api.github.com/users");
      const result = await response.json();

      return result;
    } catch (error) {
      console.error("API Request Error:", error);
      return rejectWithValue("Oops");
    }
  }
);

const gitUser = createSlice({
  name: "gitUser",
  initialState: {
    users: [],
    loading: false,
    error: null,
  },

  extraReducers: (builder) => {
    builder
      .addCase(getAllData.pending, (state) => {
        state.loading = true;
      })
      .addCase(getAllData.fulfilled, (state, action) => {
        state.loading = false;
        state.users = action.payload;
      })
      .addCase(getAllData.rejected, (state, action) => {
        state.loading = false;
        state.error = action.payload;
      });
  },
});

export default gitUser.reducer;
